<!-- See http://www.scalastyle.org/rules-0.4.0.html for the full list of checkers -->
<scalastyle>
    <name>Scalastyle standard configuration</name>
    <check level="error" class="org.scalastyle.file.FileTabChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.file.FileLineLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxLineLength"><![CDATA[160]]></parameter>
            <parameter name="tabSize"><![CDATA[4]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.file.FileLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxFileLength"><![CDATA[800]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.file.HeaderMatchesChecker" enabled="false">
        <parameters>
            <parameter name="header"><![CDATA[// Copyright header text goes here]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.IllegalImportsChecker" enabled="true">
        <parameters>
            <parameter name="illegalImports"><![CDATA[sun._,java.awt._,com.linkedin.presentation_private._,com.linkedin.urls_private._]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.ParameterNumberChecker" enabled="true">
        <parameters>
            <parameter name="maxParameters"><![CDATA[8]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.MagicNumberChecker" enabled="true">
        <parameters>
            <parameter name="ignore"><![CDATA[-1,0,1,2,3,4,5,6]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.ReturnChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.NullChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.NoCloneChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.StructuralTypeChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.file.RegexChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[println]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.NumberOfTypesChecker" enabled="true">
        <parameters>
            <parameter name="maxTypes"><![CDATA[30]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.CyclomaticComplexityChecker" enabled="true">
        <parameters>
            <parameter name="maximum"><![CDATA[15]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.IfBraceChecker" enabled="true">
        <parameters>
            <parameter name="singleLineAllowed"><![CDATA[true]]></parameter>
            <parameter name="doubleLineAllowed"><![CDATA[false]]></parameter>
        </parameters>
    </check>
    <check level="warn" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxLength"><![CDATA[50]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.MethodNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[^[a-z][A-Za-z0-9]*$]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.NumberOfMethodsInTypeChecker" enabled="true">
        <parameters>
            <parameter name="maxMethods"><![CDATA[30]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.file.NewLineAtEofChecker" enabled="false"/>
    <check level="error" class="org.scalastyle.file.NoNewLineAtEofChecker" enabled="false"/>
    <check level="error" class="org.scalastyle.scalariform.NotImplementedErrorUsage" enabled="true" />
    <check level="error" class="org.scalastyle.scalariform.BlockImportChecker" enabled="false"/>

    <!-- Implement our own since there's no official checker for semicolons -->
    <check level="error" class="org.scalastyle.file.RegexChecker" enabled="true" >
        <parameters>
            <parameter name="regex">\;(\n|$)</parameter>
        </parameters>
        <customMessage>No semicolons at end of line</customMessage>
    </check>

    <!-- Warn about .a/isInstanceOf casts and checks. -->
    <check level="warning" class="org.scalastyle.scalariform.TokenChecker" enabled="true">
        <parameters>
            <parameter name="regex">^[ai]sInstanceOf$</parameter>
        </parameters>
        <customMessage>Avoid casting.</customMessage>
    </check>
</scalastyle>