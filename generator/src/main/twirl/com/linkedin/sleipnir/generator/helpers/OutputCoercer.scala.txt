@(generator: com.linkedin.sleipnir.generator.types.TypeGenerator)

@import _root_.com.linkedin.data.schema.EnumDataSchema
@import _root_.com.linkedin.data.schema.ArrayDataSchema
@import _root_.com.linkedin.data.schema.MapDataSchema
@import _root_.com.linkedin.data.schema.RecordDataSchema
@import _root_.com.linkedin.data.schema.UnionDataSchema
@import _root_.com.linkedin.data.schema.FixedDataSchema

{
  @(generator.schema.getDereferencedDataSchema) match {

    case _: EnumDataSchema => {
      case name: String => @(generator.name.fullClassName).withNameOrUnknown(name)
    }

    case _: ArrayDataSchema => {
      case dataList: com.linkedin.data.DataList => new @(generator.name.fullClassName)(dataList).items
    }

    case _: MapDataSchema => {
      case dataMap: com.linkedin.data.DataMap => new @(generator.name.fullClassName)(dataMap).map
    }

    case _ : RecordDataSchema | _ : FixedDataSchema | _ : UnionDataSchema => {
      case data: com.linkedin.data.DataMap => new @(generator.name.fullClassName)(data)
    }
  
  }

}