@(generator: com.linkedin.sleipnir.generator.types.EnumTypeGenerator)

@import _root_.scala.collection.JavaConverters._

package @(generator.name.packageName)

import com.linkedin.data.schema.EnumDataSchema
import com.linkedin.data.template.DataTemplateUtil
import com.linkedin.sleipnir.data.ScalaEnumTemplate

/**
 * @(generator.schema.getDoc)
 */
object @(generator.name.shortClassName) extends ScalaEnumTemplate {

  private val SchemaJson: String = "@(generator.schemaJson)"

  private val Schema: EnumDataSchema = DataTemplateUtil.parseSchema(SchemaJson).asInstanceOf[EnumDataSchema]

  type @(generator.name.shortClassName) = Type

  type Type = CustomVal

  class CustomVal extends Val

  val $Unknown: Type = new Type

  @if(!generator.schema.getSymbols.isEmpty) {
    val @(generator.symbols): Type = new Type
  }

}